require 'rails_helper'

describe User do
	context "User registration with invalid input" do

		it "A user cannot register if their password is less than 64 characters" do
			user = User.create(email: "hi@hi.com", password: "1")
			expect(user.valid?).to be false
		end

		it "A user cannot register if their password is longer than 64 characters" do
			user = User.create(email: "hi@hi.com", password
			expect(user.valid?).to be false
		end

		it "A user can only register if their password is exactly 64 characters and they provide a valid email address" do
			user = User.create(email: "hi@hi.com", password: "1234567812345678123456781234567812345678123456781234567812345678")
			expect(user.valid?).to be true
		end

		it "A user cannot register without proiding an email address" do
			user = User.create(email: "butts", password: "1234567812345678123456781234567812345678123456781234567812345678")
			expect(user.valid?).to be false
		end
	end
end

# RSpec.describe User, type: :model do
#   pending "add some examples to (or delete) #{__FILE__}"
# end
